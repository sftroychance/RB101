Describe the difference between ! and ? in Ruby. And explain what would happen in the following scenarios:

1. what is != and where should you use it?
2. put ! before something, like !user_name
3. put ! after something, like words.uniq!
4. put ? before something
5. put ? after something
6. put !! before something, like !!user_name

***

NOTE!!!

? and ! in method names is not part of ruby syntax; it is a naming convention; you don't necessarily know if the method implementation is consistent with that naming!

! indicates 'not' when evaluating boolean expressions or equality; in a method name, it indicates that the method is possible destructive (will mutate the calling object), but this is just a convention

? in a method name indicates that it will return a boolean value

1. != is a comparison operator that means 'not equal'; it is used in conditional expressions.

2. putting ! before something indicates that you are changing the truthiness of that value. for !user_name, if user_name is false or nil, !user_name will return true; otherwise it will return false.

3. ! at the end of a method name indicates that it is a method that mutates the caller.

4. ? : => ternary operator

5. ? at the end of a method name indicates that the method returns a boolean value.

6. !! before something is a double-negative operator, with !!user_name, if user_name is truthy, it will result in true; if user_name is false or nil, it will result in false. it casts any object into its boolean equivalent.

