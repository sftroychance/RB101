Let's call a method, and pass both a string and an array as arguments and see how even though they are treated in the same way by Ruby, the results can be different.

Study the following code and state what will be displayed...and why:

def tricky_method(a_string_param, an_array_param)
  a_string_param += "rutabaga"
  an_array_param << "rutabaga"
end

my_string = "pumpkins"
my_array = ["pumpkins"]
tricky_method(my_string, my_array)

puts "My string looks like this now: #{my_string}"
puts "My array looks like this now: #{my_array}"

***

This will print:
My string looks like this now: pumpkins"
My array looks like this now: ["pumpkins", "rutabaga"]

in tricky_method, the string is not mutated (and its new value is not saved or returned by the method), so outside the method its value is the same as before the method. The array, however, has been mutated (using <<), so the element added within the method will still be in that array after the method.
